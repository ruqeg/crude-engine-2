#version 450
#extension GL_EXT_mesh_shader : require
#extension GL_ARB_shader_draw_parameters : require
#extension GL_EXT_shader_16bit_storage: require
#extension GL_EXT_shader_8bit_storage: require
#extension GL_GOOGLE_include_directive: require

#define CRUDE_GLOBAL_SET 0
#define CRUDE_MATERIAL_SET 1

layout(local_size_x=128) in;

struct Meshlet
{
  vec3                                                     center;
  float                                                    radius;
  int8_t                                                   cone_axis[ 3 ];
  int8_t                                                   cone_cutoff;
  uint                                                     vertices_offset;
  uint                                                     triangles_offset;
  uint8_t                                                  vertices_count;
  uint8_t                                                  triangles_count;
  uint                                                     mesh_index;
};

layout(set=1, binding=1) readonly buffer Meshlets
{
  Meshlet                                                  meshlets[];
};

taskPayloadSharedEXT struct
{
  uint                                                     meshlet_indices[ 128 ];
} shared_data;

void main()
{
  uint thread_index = gl_LocalInvocationID.x;
  uint group_index = gl_WorkGroupID.x;
  uint meshlet_index = group_index * 128 + thread_index;

  shared_data.meshlet_indices[ thread_index ] = meshlet_index;

  uint local_meslets_count = min( meshlets.length() - group_index * 128, 128 );
  EmitMeshTasksEXT( local_meslets_count, 1, 1 );
}